// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/Register.hdl

/**
 * 16-bit register:
 * If load[t] == 1 then out[t+1] = in[t]
 * else out does not change
 */

CHIP Register {
    IN in[16], load;
    OUT out[16];

    PARTS:
    // Put your code here:
    Mux(a=dfout0, b=in[0], sel=load, out=mout0);
    DFF(in=mout0, out=dfout0, out=out[0]);

    Mux(a=dfout1, b=in[1], sel=load, out=mout1);
    DFF(in=mout1, out=dfout1, out=out[1]);

    Mux(a=dfout2, b=in[2], sel=load, out=mout2);
    DFF(in=mout2, out=dfout2, out=out[2]);

    Mux(a=dfout3, b=in[3], sel=load, out=mout3);
    DFF(in=mout3, out=dfout3, out=out[3]);

    Mux(a=dfout4, b=in[4], sel=load, out=mout4);
    DFF(in=mout4, out=dfout4, out=out[4]);

    Mux(a=dfout5, b=in[5], sel=load, out=mout5);
    DFF(in=mout5, out=dfout5, out=out[5]);

    Mux(a=dfout6, b=in[6], sel=load, out=mout6);
    DFF(in=mout6, out=dfout6, out=out[6]);

    Mux(a=dfout7, b=in[7], sel=load, out=mout7);
    DFF(in=mout7, out=dfout7, out=out[7]);

    Mux(a=dfout8, b=in[8], sel=load, out=mout8);
    DFF(in=mout8, out=dfout8, out=out[8]);

    Mux(a=dfout9, b=in[9], sel=load, out=mout9);
    DFF(in=mout9, out=dfout9, out=out[9]);

    Mux(a=dfout10, b=in[10], sel=load, out=mout10);
    DFF(in=mout10, out=dfout10, out=out[10]);

    Mux(a=dfout11, b=in[11], sel=load, out=mout11);
    DFF(in=mout11, out=dfout11, out=out[11]);

    Mux(a=dfout12, b=in[12], sel=load, out=mout12);
    DFF(in=mout12, out=dfout12, out=out[12]);

    Mux(a=dfout13, b=in[13], sel=load, out=mout13);
    DFF(in=mout13, out=dfout13, out=out[13]);

    Mux(a=dfout14, b=in[14], sel=load, out=mout14);
    DFF(in=mout14, out=dfout14, out=out[14]);

    Mux(a=dfout15, b=in[15], sel=load, out=mout15);
    DFF(in=mout15, out=dfout15, out=out[15]);
}
